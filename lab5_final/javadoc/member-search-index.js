memberSearchIndex = [{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"accuracy()"},{"p":"<Unnamed>","c":"Matrix","l":"add(Matrix)"},{"p":"<Unnamed>","c":"Matrix","l":"addRow(double[])"},{"p":"<Unnamed>","c":"Matrix","l":"appendAsRows(Matrix)"},{"p":"<Unnamed>","c":"Matrix","l":"apply(Function<Double, Double>)","u":"apply(java.util.function.Function)"},{"p":"<Unnamed>","c":"InputNode","l":"backConnect(IPropagable, double)","u":"backConnect(IPropagable,double)"},{"p":"<Unnamed>","c":"IPropagable","l":"backConnect(IPropagable, double)","u":"backConnect(IPropagable,double)"},{"p":"<Unnamed>","c":"Neuron","l":"backConnect(IPropagable, double)","u":"backConnect(IPropagable,double)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"backpropagate(double)"},{"p":"<Unnamed>","c":"InputNode","l":"backpropagate(Matrix, double, int)","u":"backpropagate(Matrix,double,int)"},{"p":"<Unnamed>","c":"IPropagable","l":"backpropagate(Matrix, double, int)","u":"backpropagate(Matrix,double,int)"},{"p":"<Unnamed>","c":"Neuron","l":"backpropagate(Matrix, double, int)","u":"backpropagate(Matrix,double,int)"},{"p":"<Unnamed>","c":"InputNode","l":"bias()"},{"p":"<Unnamed>","c":"IPropagable","l":"bias()"},{"p":"<Unnamed>","c":"Neuron","l":"bias()"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"BinaryClassifierStats(Matrix, Matrix)","u":"%3Cinit%3E(Matrix,Matrix)"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"calcAccuracy(int, int, int, int)","u":"calcAccuracy(int,int,int,int)"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"calcKappa(int, int, int, int)","u":"calcKappa(int,int,int,int)"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"calcPrecision(int, int)","u":"calcPrecision(int,int)"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"calcRecall(int, int)","u":"calcRecall(int,int)"},{"p":"<Unnamed>","c":"Matrix","l":"columns()"},{"p":"<Unnamed>","c":"InputNode","l":"connect(IPropagable)"},{"p":"<Unnamed>","c":"IPropagable","l":"connect(IPropagable)"},{"p":"<Unnamed>","c":"Neuron","l":"connect(IPropagable)"},{"p":"<Unnamed>","c":"InputNode","l":"connect(IPropagable, double)","u":"connect(IPropagable,double)"},{"p":"<Unnamed>","c":"IPropagable","l":"connect(IPropagable, double)","u":"connect(IPropagable,double)"},{"p":"<Unnamed>","c":"Neuron","l":"connect(IPropagable, double)","u":"connect(IPropagable,double)"},{"p":"<Unnamed>","c":"Neuron","l":"CONNECTION_IDENTIFIER"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"cropEdges(String, String, String, int, int)","u":"cropEdges(java.lang.String,java.lang.String,java.lang.String,int,int)"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"DataPreprocessor()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"ditheringNoise(String, String, String)","u":"ditheringNoise(java.lang.String,java.lang.String,java.lang.String)"},{"p":"<Unnamed>","c":"Matrix","l":"dot(Matrix)"},{"p":"<Unnamed>","c":"Matrix","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"evaluate(Matrix)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"forcePropagation()"},{"p":"<Unnamed>","c":"InputNode","l":"fwrdConnect(IPropagable)"},{"p":"<Unnamed>","c":"IPropagable","l":"fwrdConnect(IPropagable)"},{"p":"<Unnamed>","c":"Neuron","l":"fwrdConnect(IPropagable)"},{"p":"<Unnamed>","c":"RandomNumberGenerator","l":"get()"},{"p":"<Unnamed>","c":"Matrix","l":"get(int, int)","u":"get(int,int)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getAccuracy(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getError()"},{"p":"<Unnamed>","c":"Neuron","l":"getError(Matrix, boolean)","u":"getError(Matrix,boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getError(Matrix, Matrix)","u":"getError(Matrix,Matrix)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getKappa(boolean)"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"getNumLines(String)","u":"getNumLines(java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getPrecision(boolean)"},{"p":"<Unnamed>","c":"RandomNumberGenerator","l":"getRandomBounded(double)"},{"p":"<Unnamed>","c":"Neuron","l":"getRandomWeight()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getRecall(boolean)"},{"p":"<Unnamed>","c":"Matrix","l":"getRow(int)"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"getSplitSetsFromDataset(double[][], double[][], double)","u":"getSplitSetsFromDataset(double[][],double[][],double)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getTestingError()"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"getValuesFromFile(String, String)","u":"getValuesFromFile(java.lang.String,java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"getWeightInfo()"},{"p":"<Unnamed>","c":"InputNode","l":"getWeightInfo(ArrayList<String>)","u":"getWeightInfo(java.util.ArrayList)"},{"p":"<Unnamed>","c":"IPropagable","l":"getWeightInfo(ArrayList<String>)","u":"getWeightInfo(java.util.ArrayList)"},{"p":"<Unnamed>","c":"Neuron","l":"getWeightInfo(ArrayList<String>)","u":"getWeightInfo(java.util.ArrayList)"},{"p":"<Unnamed>","c":"InputNode","l":"ghostOutput()"},{"p":"<Unnamed>","c":"IPropagable","l":"ghostOutput()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"ghostOutput()"},{"p":"<Unnamed>","c":"Neuron","l":"ghostOutput()"},{"p":"<Unnamed>","c":"InputNode","l":"ghostpropagate()"},{"p":"<Unnamed>","c":"IPropagable","l":"ghostpropagate()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"ghostpropagate()"},{"p":"<Unnamed>","c":"Neuron","l":"ghostpropagate()"},{"p":"<Unnamed>","c":"Matrix","l":"hashCode()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"hasTestingSet()"},{"p":"<Unnamed>","c":"InputNode","l":"IDENTIFIER"},{"p":"<Unnamed>","c":"Neuron","l":"IDENTIFIER"},{"p":"<Unnamed>","c":"InputNode","l":"InputNode()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"InputNode","l":"InputNode(Matrix)","u":"%3Cinit%3E(Matrix)"},{"p":"<Unnamed>","c":"InputNode","l":"InputNode(Matrix, String)","u":"%3Cinit%3E(Matrix,java.lang.String)"},{"p":"<Unnamed>","c":"InputNode","l":"InputNode(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"isBinaryClassifier()"},{"p":"<Unnamed>","c":"Neuron","l":"isOutputNeuron()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"iterationsDone()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"iterativePropagation()"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"kappa()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"layeredBuilder(int, int, Matrix, Matrix, ArrayList<Integer>)","u":"layeredBuilder(int,int,Matrix,Matrix,java.util.ArrayList)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"loadFromFile(String)","u":"loadFromFile(java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetworkSerializer","l":"loadNetwork(String)","u":"loadNetwork(java.lang.String)"},{"p":"<Unnamed>","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"<Unnamed>","c":"Matrix","l":"makeDiagonal()"},{"p":"<Unnamed>","c":"Matrix","l":"Matrix(double[][])","u":"%3Cinit%3E(double[][])"},{"p":"<Unnamed>","c":"Matrix","l":"Matrix(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"<Unnamed>","c":"Matrix","l":"Matrix(int, int, double)","u":"%3Cinit%3E(int,int,double)"},{"p":"<Unnamed>","c":"Matrix","l":"Matrix(Matrix)","u":"%3Cinit%3E(Matrix)"},{"p":"<Unnamed>","c":"Main","l":"mooshak()"},{"p":"<Unnamed>","c":"Matrix","l":"multiply(double)"},{"p":"<Unnamed>","c":"InputNode","l":"name()"},{"p":"<Unnamed>","c":"IPropagable","l":"name()"},{"p":"<Unnamed>","c":"Neuron","l":"name()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"NeuralNetwork(ArrayList<InputNode>, ArrayList<Neuron>)","u":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"NeuralNetwork(ArrayList<InputNode>, ArrayList<Neuron>, Matrix, Matrix)","u":"%3Cinit%3E(java.util.ArrayList,java.util.ArrayList,Matrix,Matrix)"},{"p":"<Unnamed>","c":"NeuralNetworkSerializer","l":"NeuralNetworkSerializer()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Neuron","l":"Neuron()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Neuron","l":"Neuron(double)","u":"%3Cinit%3E(double)"},{"p":"<Unnamed>","c":"Neuron","l":"Neuron(double, String)","u":"%3Cinit%3E(double,java.lang.String)"},{"p":"<Unnamed>","c":"Neuron","l":"Neuron(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"normalize(String, String, String)","u":"normalize(java.lang.String,java.lang.String,java.lang.String)"},{"p":"<Unnamed>","c":"InputNode","l":"output()"},{"p":"<Unnamed>","c":"IPropagable","l":"output()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"output()"},{"p":"<Unnamed>","c":"Neuron","l":"output()"},{"p":"<Unnamed>","c":"Matrix","l":"parse()"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"precision()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"printOutputs()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"printWeights()"},{"p":"<Unnamed>","c":"InputNode","l":"propagate()"},{"p":"<Unnamed>","c":"IPropagable","l":"propagate()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"propagate()"},{"p":"<Unnamed>","c":"Neuron","l":"propagate()"},{"p":"<Unnamed>","c":"RandomNumberGenerator","l":"RandomNumberGenerator()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"readMatrix(String, String)","u":"readMatrix(java.lang.String,java.lang.String)"},{"p":"<Unnamed>","c":"BinaryClassifierStats","l":"recall()"},{"p":"<Unnamed>","c":"InputNode","l":"resetCaches()"},{"p":"<Unnamed>","c":"IPropagable","l":"resetCaches()"},{"p":"<Unnamed>","c":"Neuron","l":"resetCaches()"},{"p":"<Unnamed>","c":"Matrix","l":"rows()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"runKFolds(int, Matrix, Matrix, int, double, String)","u":"runKFolds(int,Matrix,Matrix,int,double,java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetworkSerializer","l":"saveNetwork(NeuralNetwork, String)","u":"saveNetwork(NeuralNetwork,java.lang.String)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"saveToFile(String)","u":"saveToFile(java.lang.String)"},{"p":"<Unnamed>","c":"RandomNumberGenerator","l":"seed()"},{"p":"<Unnamed>","c":"InputNode","l":"set(Matrix)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setEarlyStopping(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setExportingLoss(boolean)"},{"p":"<Unnamed>","c":"InputNode","l":"setGhost(Matrix)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setPrettyPrint(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setPrinting(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setPrintingTestingError(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setPrintOutputs(boolean)"},{"p":"<Unnamed>","c":"RandomNumberGenerator","l":"setSeed(long)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setShouldPrintWeights(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setShouldPrintWhileTraining(boolean)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setTestingSet(Matrix, Matrix)","u":"setTestingSet(Matrix,Matrix)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"setTrainingData(Matrix, Matrix)","u":"setTrainingData(Matrix,Matrix)"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"shuffleRows(double[][])"},{"p":"<Unnamed>","c":"DataPreprocessor","l":"shuffleRowsPreserve(double[][], double[][])","u":"shuffleRowsPreserve(double[][],double[][])"},{"p":"<Unnamed>","c":"Matrix","l":"splitByRows(double)"},{"p":"<Unnamed>","c":"Matrix","l":"sub(Matrix)"},{"p":"<Unnamed>","c":"Matrix","l":"subMatrix(int, int, int, int)","u":"subMatrix(int,int,int,int)"},{"p":"<Unnamed>","c":"Matrix","l":"toString()"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"train(double, double)","u":"train(double,double)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"train(int, double)","u":"train(int,double)"},{"p":"<Unnamed>","c":"NeuralNetwork","l":"train(Integer, Double, double)","u":"train(java.lang.Integer,java.lang.Double,double)"},{"p":"<Unnamed>","c":"Matrix","l":"transpose()"},{"p":"<Unnamed>","c":"Neuron","l":"WEIGHT_IDENTIFIER"},{"p":"<Unnamed>","c":"InputNode","l":"weights()"},{"p":"<Unnamed>","c":"IPropagable","l":"weights()"},{"p":"<Unnamed>","c":"Neuron","l":"weights()"}];updateSearchResults();